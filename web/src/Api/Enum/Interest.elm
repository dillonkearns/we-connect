-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Api.Enum.Interest exposing (..)

import Json.Decode as Decode exposing (Decoder)


type Interest
    = Golf
    | Tennis
    | Surfing
    | Beach
list : List Interest
list =
    [Golf, Tennis, Surfing, Beach]
decoder : Decoder Interest
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "Golf" ->
                        Decode.succeed Golf

                    "Tennis" ->
                        Decode.succeed Tennis

                    "Surfing" ->
                        Decode.succeed Surfing

                    "Beach" ->
                        Decode.succeed Beach

                    _ ->
                        Decode.fail ("Invalid Interest type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
        )
        

{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Interest -> String
toString enum =
    case enum of
        Golf ->
                "Golf"


        Tennis ->
                "Tennis"


        Surfing ->
                "Surfing"


        Beach ->
                "Beach"
