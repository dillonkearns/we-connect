-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql
module Api.Enum.MutationType exposing (..)

import Json.Decode as Decode exposing (Decoder)


type MutationType
    = Created
    | Updated
    | Deleted
list : List MutationType
list =
    [Created, Updated, Deleted]
decoder : Decoder MutationType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "CREATED" ->
                        Decode.succeed Created

                    "UPDATED" ->
                        Decode.succeed Updated

                    "DELETED" ->
                        Decode.succeed Deleted

                    _ ->
                        Decode.fail ("Invalid MutationType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
        )
        

{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : MutationType -> String
toString enum =
    case enum of
        Created ->
                "CREATED"


        Updated ->
                "UPDATED"


        Deleted ->
                "DELETED"
